{{ 'my-general-style.css' | asset_url | stylesheet_tag }}
{{ 'myproducts.css' | asset_url | stylesheet_tag }}
{{ 'myproductfeature.css' | asset_url | stylesheet_tag }}

{% assign collection = collections[section.settings.collection] %}

<!-- Gallery Section -->
<div class="myproducts">
  <div class="column">
    <p class="column__title">
      {{ section.settings.tissovisonin }}
    </p>
    <div class="column__grid">
      {%- for product in collection.products limit: section.settings.products_to_show -%}
        <div class="image-gallery__item">
          <img
            src="{{ product.featured_image | img_url: '432x444', crop: 'center' }}"
            alt="{{ product.title | escape }}"
            width="432"
            height="444"
            loading="lazy"
            class="image-gallery__image">
          {% render 'img_plus'
            , class: 'image-gallery__add-icon'
            , datamodalid: product.id %}


          {% comment %} {% render 'product-modal' %} {% endcomment %}
          <div id="{{product.id}}" class="product-modal">

            <div class="product-details ">
              <!-- product details section -->
              <div class="product-details__description">

                <div class="description__image-text-wrapper">
                  <img
                    src="{{ product.featured_image | image_url: width: 120 }}"
                    alt="{{ product.featured_image.alt | escape }}"
                    width="120"
                    height="140"
                    loading="lazy"
                    class="image-text-wrapper__image" />
                  <div class="image-text-wrapper__text">
                    <p class="text__title">
                      {{ product.title }}
                    </p>
                    <p class="text__price">
                      {{ product.price | money }}
                    </p>
                    <p class="text__description">
                      {{ product.description | strip_html | truncatewords: 30 }}
                    </p>
                  </div>
                </div>
              </div>


              <!-- product color options section -->
              <div class="color-selector">
                <label for="color">Color</label>
                <div class="color-options">
                  {% assign colors = '' %}
                  {% for variant in product.variants %}
                    {% unless colors contains variant.option2 %}
                      {% unless variant.option2 == blank %}
                        <div class="color-option" style="border-left:  4px solid {{ variant.option2 | downcase }};">
                          <span class="color-name">{{ variant.option2 }}</span>
                        </div>
                        {% assign colors = colors | append: variant.option2 | append: ',' %}
                      {% endunless %}
                    {% endunless %}
                  {% endfor %}
                </div>
              </div>


              <!-- product size selection section -->
              {% if product.options_with_values.size > 0 %}
                <div class="product-details__size-selection">
                  <p class="color-selection__title">
                    {{ 'products.product.size' | t }}
                  </p>
                  <select
                    name="size"
                    style="background-image: url({{ 'defaultNoData.png' | file_url }})"
                    class="size-selection__dropdown">
                    {% for value in product.options_with_values.first.values %}
                      <option value="{{ value | escape }}">{{ value }}</option>
                    {% endfor %}
                  </select>
                </div>
              {% endif %}

              <!-- add to cart button section -->
              <button class="flex-row-center-center product-details__add-to-cart" id="AddToCart">
                <span>{{ 'products.product.add_to_cart' | t }}</span>
                <div class="right-icon-wrapper">
                  {% render 'img_line_15'
                    , class: "line-15" %}
                </div>
              </button>


            </div>
          </div>
        {% comment %}  {% endcomment %}
        </div>
      {%- endfor -%}
    </div>
  </div>

</div>


{% schema %}
  {
    "name": "t:sections.myproducts.name",
    "tag": "section",
    "class": "section",
    "settings": [
      {
        "type": "text",
        "id": "tissovisonin",
        "label": "t:sections.myproducts.settings.tissovisonin",
        "default": "Tisso vision in the wild"
      },
      {
        "type": "collection",
        "id": "collection",
        "label": "Collection"
      },
      {
        "type": "range",
        "id": "products_to_show",
        "min": 1,
        "max": 12,
        "step": 1,
        "default": 6,
        "label": "Number of products to show"
      }
    ],
    "presets": [
      {
        "name": "t:sections.myproducts.presets.name"
      }
    ]
  }
{% endschema %}
{% javascript %}
  document.addEventListener('DOMContentLoaded', function() {
    const addIcons = document.querySelectorAll('.image-gallery__add-icon');

    addIcons.forEach((icon) => {
      icon.addEventListener('click', function() {
        const modalId = icon.getAttribute('datamodalid');
        console.log("modelid", modalId)
        const modal = document.getElementById(modalId);
        modal.style.display = 'block';
      });
    });

// Close modal when clicking outside or on the close button
    const modals = document.querySelectorAll('.product-modal');
    modals.forEach((modal) => {
      modal.addEventListener('click', function(event) {
        if (event.target === modal || event.target.classList.contains('close-btn')) {
          modal.style.display = 'none';
        }
      });
    });

// Add to cart
// var addToCartButton = document.getElementById('AddToCart');
// addToCartButton.addEventListener('click', function() {
// var variantId = {{ product.selected_or_first_available_variant.id }};
// var quantity = 1;

// fetch('/cart/add.js', {
// method: 'POST',
// headers: {
// 'Content-Type': 'application/json'
// },
// body: JSON.stringify(
// {
// items: [
// {
// id: variantId,
// quantity: quantity
// }
// ]
// }
// )
// }).then((response) => response.json()).then((data) => {
// console.log('Product added to cart:', data);
// }).catch((error) => {
// console.error('Error:', error);
// });
// });
  });


{% endjavascript %}

{% stylesheet %}
  .product-modal {
    display: none;
    position: fixed;
    z-index: 1000;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.7);
    justify-content: center;
    align-items: center;
    overflow: auto;
  }

  .close-btn {
    position: relative;
    top: -20px;
    margin: 0;
    padding: 0;
    right: 10px;
    font-size: 30px;
    color: #333;
    cursor: pointer;
  }

  .image-gallery {
    position: relative;
  }

  .image-gallery__item {
    position: relative;
    margin: 10px;
  }

  .btn {
    padding: 10px 20px;
    border: none;
    cursor: pointer;
    margin-top: 10px;
    color: black;
    background-color: white;
  }
{% endstylesheet %}